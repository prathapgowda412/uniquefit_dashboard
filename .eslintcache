[{"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\index.js":"1","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\App.js":"2","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\reportWebVitals.js":"3","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\MainLayouts.js":"4","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\Login\\Login.js":"5","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\components\\Header.js":"6","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\components\\PaperDash.js":"7","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\Sidemenu\\SideMenu.js":"8","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\routing.js":"9","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\components\\NotFound.js":"10","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Dashboard\\Dashboard.js":"11","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Orders\\RecievedOrders.js":"12","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\DeleteProducts.js":"13","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Orders\\SingleOrder.js":"14","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\AllProducts.js":"15","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\Products.js":"16","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\AddProducts.js":"17","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\UpdateProducts.js":"18","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Common\\Dropzone.js":"19","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Orders\\DeliveredOrders.js":"20","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Orders\\StitchingOrders.js":"21"},{"size":613,"mtime":1611215557247,"results":"22","hashOfConfig":"23"},{"size":332,"mtime":1612785963708,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1611215557250,"results":"25","hashOfConfig":"23"},{"size":1049,"mtime":1611215557247,"results":"26","hashOfConfig":"23"},{"size":3847,"mtime":1612782847326,"results":"27","hashOfConfig":"23"},{"size":1386,"mtime":1612785634001,"results":"28","hashOfConfig":"23"},{"size":762,"mtime":1611215557249,"results":"29","hashOfConfig":"23"},{"size":4211,"mtime":1612782847326,"results":"30","hashOfConfig":"23"},{"size":1650,"mtime":1612785216660,"results":"31","hashOfConfig":"23"},{"size":117,"mtime":1611215557249,"results":"32","hashOfConfig":"23"},{"size":966,"mtime":1612785391847,"results":"33","hashOfConfig":"23"},{"size":6194,"mtime":1612785216794,"results":"34","hashOfConfig":"23"},{"size":3766,"mtime":1612785216956,"results":"35","hashOfConfig":"23"},{"size":1323,"mtime":1612785216831,"results":"36","hashOfConfig":"23"},{"size":4562,"mtime":1612785216919,"results":"37","hashOfConfig":"23"},{"size":5486,"mtime":1612785216992,"results":"38","hashOfConfig":"23"},{"size":15212,"mtime":1612785216882,"results":"39","hashOfConfig":"23"},{"size":13491,"mtime":1612785217036,"results":"40","hashOfConfig":"23"},{"size":798,"mtime":1612785216701,"results":"41","hashOfConfig":"23"},{"size":5582,"mtime":1612785209917,"results":"42","hashOfConfig":"23"},{"size":6323,"mtime":1612785209975,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"lhc2fq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\index.js",[],["92","93"],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\App.js",["94"],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\MainLayouts.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\Login\\Login.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\components\\Header.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\components\\PaperDash.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\Sidemenu\\SideMenu.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\routing.js",["95"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NotFound from './layouts/components/NotFound';\nimport AdminLogin from './Login/Login';\nimport Dashboard from './views/Dashboard/Dashboard';\nimport DeliveredOrders from './views/Orders/DeliveredOrders';\nimport RecievedOrders from './views/Orders/RecievedOrders';\nimport SingleOrder from './views/Orders/SingleOrder';\nimport StitchingOrders from './views/Orders/StitchingOrders';\nimport AddProducts from './views/Products/AddProducts';\nimport AllProducts from './views/Products/AllProducts';\nimport DeleteProducts from './views/Products/DeleteProducts';\nimport Products from './views/Products/Products';\nimport UpdateProducts from './views/Products/UpdateProducts';\n\nfunction Routing() {\n  return (\n    <Switch>\n      <Route exact path='/'>\n        <Dashboard />\n      </Route>\n      <Route path='/admin-login' component={AdminLogin} />\n      <Route path='/products'>\n        <AllProducts />\n      </Route>\n      <Route path='/addproducts'>\n        <AddProducts />\n      </Route>\n      <Route path='/deleteproducts'>\n        <DeleteProducts />\n      </Route>\n      <Route path='/updateproducts'>\n        <UpdateProducts />\n      </Route>\n      <Route path='/orders-recieved'>\n        <RecievedOrders />\n      </Route>\n      <Route path='/orders-stitching'>\n        <StitchingOrders />\n      </Route>\n      <Route path='/orders-delivered'>\n        <DeliveredOrders />\n      </Route>\n      <Route path='/single-order/:order'>\n        <SingleOrder />\n      </Route>\n      <Route path='*'>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routing;\n","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\layouts\\components\\NotFound.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Dashboard\\Dashboard.js",["96"],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Orders\\RecievedOrders.js",["97","98","99"],"/* eslint-disable array-callback-return */\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport axios from 'axios';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { toast } from 'react-toastify';\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n  acceptbutton: {\n    backgroundColor: 'blue',\n    padding: '8px 24px',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: 'darkblue',\n    },\n  },\n});\n\nfunction Row(props) {\n  const { order } = props;\n  // eslint-disable-next-line no-unused-vars\n  const [orderProducts] = React.useState(order.products);\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  const orderDate = order.orderplacedon.slice(0, 10);\n  const orderTime = order.orderplacedon.slice(11, 16);\n  const handleAccept = async () => {\n    const orderData = {\n      _id: order._id,\n      orderstatus: 'Stitching',\n    };\n    const resp = await axios.post(\n      `${process.env.REACT_APP_API_URL}/products/update-order-by-id`,\n      orderData\n    );\n    if (resp.status === 203) {\n      toast.success('accepted for stitching');\n      window.location.reload();\n    }\n    // console.log(resp);\n  };\n\n  // console.log(order);\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label='expand row'\n            size='small'\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell>{order._id}</TableCell>\n        <TableCell>\n          {orderDate} <br />\n          {orderTime}\n        </TableCell>\n        <TableCell>{order.username}</TableCell>\n        <TableCell align='right'>{order.cartValue}</TableCell>\n        <TableCell align='right'>{order.sellingPrice}</TableCell>\n        <TableCell>\n          <Button onClick={handleAccept} className={classes.acceptbutton}>\n            Accept\n          </Button>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout='auto' unmountOnExit>\n            <Box margin={1}>\n              <Box>\n                <Typography>Order Details</Typography>\n                <Typography>Adress: </Typography>\n                <Typography style={{ width: '300px', fontSize: '14px' }}>\n                  {order.address}\n                </Typography>\n              </Box>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell> Index</TableCell>\n                    <TableCell> Product ID </TableCell>\n                    <TableCell> Name </TableCell>\n                    <TableCell> Image </TableCell>\n                    <TableCell> MRP </TableCell>\n                    <TableCell> Sell Price </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orderProducts.map((product) => (\n                    <>\n                      <TableRow\n                        style={{\n                          backgroundColor: '#f2f2f2',\n                          borderBottom: '1px solid grey',\n                        }}\n                      >\n                        <TableCell></TableCell>\n                        <TableCell>{product.productid}</TableCell>\n                        <TableCell>{product.productname}</TableCell>\n                        <TableCell>\n                          <img\n                            height={40}\n                            src={product.productimages[0]}\n                            alt=''\n                          />\n                        </TableCell>\n                        <TableCell>{product.productprice}</TableCell>\n                        <TableCell>{product.productsaleprice}</TableCell>\n                      </TableRow>\n                    </>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nfunction RecievedOrders() {\n  const [orders, setOrders] = React.useState();\n  const getOrders = async () => {\n    const resp = await axios.get(\n      `${process.env.REACT_APP_API_URL}/products/get-all-orders`\n    );\n    await setOrders(resp.data);\n    // console.log(resp.data);\n  };\n\n  useEffect(() => {\n    getOrders();\n  }, []);\n  return (\n    <Table\n      aria-label='collapsible table'\n      stickyHeader\n      style={{ backgroundColor: '#fff' }}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell />\n          <TableCell>Order ID</TableCell>\n          <TableCell>Ordered On</TableCell>\n          <TableCell>User name</TableCell>\n          <TableCell align='right'>MRP</TableCell>\n          <TableCell align='right'>Sellprice</TableCell>\n          <TableCell> Accept </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {orders ? (\n          <>\n            {orders.map((order) =>\n              !'received'.localeCompare(order.orderstatus, undefined, {\n                sensitivity: 'base',\n              }) ? (\n                <Row key={order._id} order={order} />\n              ) : (\n                ''\n              )\n            )}\n            {/* <Row key={order._id} order={order} /> */}\n          </>\n        ) : (\n          <CircularProgress />\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n\nexport default RecievedOrders;\n","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\DeleteProducts.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Orders\\SingleOrder.js",["100"],"import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction SingleOrder() {\r\n  let order_id = useParams();\r\n  //   console.log(order_id);\r\n  //   console.log(order_id.order);\r\n  const [singleOrder, setSingleOrder] = React.useState();\r\n  const [Orderss, setorderss] = React.useState([]);\r\n  const getOrder = async () => {\r\n    const orders = (\r\n      await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/products/get-all-orders`\r\n      )\r\n    ).data;\r\n    setorderss(orders);\r\n    await setSingleOrder(\r\n      orders.find((ord) => {\r\n        return ord._id === order_id;\r\n      })\r\n    );\r\n    // console.log(singleOrder);\r\n    // setSingleOrder(\r\n    //   orders.find((ord) => {\r\n    //     return ord._id === order_id;\r\n    //   })\r\n    // );\r\n    // console.log(singleOrder);\r\n  };\r\n  useEffect(() => {\r\n    getOrder();\r\n  });\r\n  return (\r\n    <>\r\n      {' '}\r\n      helo this is single order of order id :{order_id.order}{' '}\r\n      <div>\r\n        {/* {Orderss.map((ord) => {\r\n          if (ord._id === order_id) {\r\n            return (\r\n              <>\r\n                order id found : {ord._id} <br />{' '}\r\n              </>\r\n            );\r\n          }\r\n        })} */}\r\n        {singleOrder ? 'found id ' : 'not found '}\r\n      </div>{' '}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleOrder;\r\n","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\AllProducts.js",["101"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { LinearProgress } from '@material-ui/core';\n\nconst columns = [\n  { id: 'order id', label: 'order id', minWidth: 100 },\n  { id: 'Username', label: 'Username', minWidth: 100 },\n  { id: 'No. of Products', label: 'No. of Products', minWidth: 100 },\n  { id: 'Order value', label: 'Order value', minWidth: 100 },\n  { id: 'No.of Products', label: 'No.of Products', minWidth: 100 },\n];\n\nfunction createData(name, productid, population, size) {\n  const density = population / size;\n  return { name, productid, population, size, density };\n}\n\nconst rows = [createData('23459857', 23356768)];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: '100%',\n    position: 'relative',\n  },\n});\nfunction AllProducts() {\n  const [products, setProducts] = React.useState();\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  // console.log(products);\n  let [productsLength, setProductsLength] = React.useState();\n  // setProductsLength(() => (products ? '' : products.length));\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const getProducts = async () => {\n    const resp = await axios.get(\n      `${process.env.REACT_APP_API_URL}/products/get-products`\n    );\n    // console.log(resp);\n    setProducts(resp.data);\n  };\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label='sticky table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Product id</TableCell>\n              <TableCell>Image</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>MRP Price</TableCell>\n              <TableCell>Sale Price</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products ? (\n              <>\n                {/* {' '}\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) */}\n                {products.map((product) => {\n                  return (\n                    <TableRow\n                      hover\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={product.productid}\n                    >\n                      <TableCell key={product.id} align={product.align}>\n                        {product.productid}\n                      </TableCell>\n                      <TableCell key={product.id} align={product.align}>\n                        <img\n                          height={40}\n                          src={product.productimages[0]}\n                          alt=''\n                        />\n                      </TableCell>\n                      <TableCell key={product.id} align={product.align}>\n                        {product.productname}\n                      </TableCell>\n                      <TableCell key={product.id} align={product.align}>\n                        {product.productprice}\n                      </TableCell>\n                      <TableCell key={product.id} align={product.align}>\n                        {product.productsaleprice}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}{' '}\n              </>\n            ) : (\n              <LinearProgress\n                style={{ marginTop: '20px', marginBottom: '20px' }}\n              />\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component='div'\n        count={productsLength}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      /> */}\n    </Paper>\n  );\n}\n\nexport default AllProducts;\n","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\Products.js",["102","103"],"// import React from 'react';\r\n\r\n// function Products() {\r\n//   return <div> this is products </div>;\r\n// }\r\n\r\n// export default Products;\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport axios from 'axios';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 100 },\r\n  { id: 'productId', label: 'product id', minWidth: 100 },\r\n  { id: 'mrpPrice', label: 'MRP Price', minWidth: 100 },\r\n  { id: 'salePrice', label: 'sale price', minWidth: 100 },\r\n];\r\n\r\nfunction createData(name, productId, mrpPrice, salePrice) {\r\n  return { name, productId, mrpPrice, salePrice };\r\n}\r\n\r\nlet productsAll;\r\nconst name = 'df',\r\n  productId = '155',\r\n  mrpPrice = 1599,\r\n  salePrice = 1299;\r\nconst rows = [\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n  { name, productId, mrpPrice, salePrice },\r\n];\r\n\r\n// function proData() {\r\n//   productsAll.\r\n// }\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: '100%',\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable() {\r\n  const [products, setProducts] = React.useState();\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const getProducts = async () => {\r\n    const resp = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/products/get-products`\r\n    );\r\n    // console.log(resp);\r\n    setProducts(resp.data);\r\n    // console.log(products);\r\n  };\r\n  const setProductsTo = () => {\r\n    productsAll = products;\r\n  };\r\n  useEffect(() => {\r\n    getProducts();\r\n    setProductsTo();\r\n    // console.log(productsAll);\r\n  });\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label='sticky table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role='checkbox' tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component='div'\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\AddProducts.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Products\\UpdateProducts.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Common\\Dropzone.js",[],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Orders\\DeliveredOrders.js",["104","105"],"C:\\Users\\91997\\Documents\\unique fit\\uniquefit_dashboard\\src\\views\\Orders\\StitchingOrders.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":18},{"ruleId":"110","severity":1,"message":"114","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":16},{"ruleId":"110","severity":1,"message":"115","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":15},{"ruleId":"110","severity":1,"message":"116","line":61,"column":8,"nodeType":"112","messageId":"113","endLine":61,"endColumn":23},{"ruleId":"110","severity":1,"message":"117","line":93,"column":9,"nodeType":"112","messageId":"113","endLine":93,"endColumn":25},{"ruleId":"110","severity":1,"message":"118","line":97,"column":9,"nodeType":"112","messageId":"113","endLine":97,"endColumn":32},{"ruleId":"110","severity":1,"message":"119","line":10,"column":10,"nodeType":"112","messageId":"113","endLine":10,"endColumn":17},{"ruleId":"110","severity":1,"message":"120","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"121","line":28,"column":10,"nodeType":"112","messageId":"113","endLine":28,"endColumn":20},{"ruleId":"110","severity":1,"message":"122","line":114,"column":5,"nodeType":"112","messageId":"113","endLine":114,"endColumn":16},{"ruleId":"110","severity":1,"message":"123","line":16,"column":10,"nodeType":"112","messageId":"113","endLine":16,"endColumn":16},{"ruleId":"110","severity":1,"message":"124","line":17,"column":10,"nodeType":"112","messageId":"113","endLine":17,"endColumn":15},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'AdminLogin' is defined but never used.","Identifier","unusedVar","'Products' is defined but never used.","'Chart' is defined but never used.","'TablePagination' is defined but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'Orderss' is assigned a value but never used.","'React' is defined but never used.","'createData' is defined but never used.","'productsAll' is assigned a value but never used.","'Button' is defined but never used.","'toast' is defined but never used.","no-global-assign","no-unsafe-negation"]